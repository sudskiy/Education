# Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
# Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список.
# Класс-исключение должен контролировать типы данных элементов списка.

# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу
# скрипта, введя, например, команду “stop”. При этом скрипт завершается, сформированный список выводится на экран.

# Подсказка: для данного задания примем, что пользователь может вводить только числа и строки. При вводе пользователем
# очередного элемента необходимо реализовать проверку типа элемента и вносить его в список, только если введено число.
# Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение.
# При этом работа скрипта не должна завершаться.

class NumberError(Exception):
    def __init__(self, text_errror='Объект не является числовым!'):
        self.__text_errror = text_errror

    def __str__(self):
        return f'{self.__text_errror}'
# end class NumberError


l_numbers = []
while True:
    v_value = ''
    try:
        v_value = input('Введите число:')
        if v_value.isdigit():
            l_numbers.append(v_value)
        elif v_value == 'stop':
            break
        else:
            raise NumberError
    except NumberError as msg:
        # мне нужно чтобы цикл не останавливался, поэтому print
        print(f'Перехвачена ошибка NumberError!\n'
              f'Текст исключения: '
              f'{msg}\n'
              f'Значение: {v_value}\n'
              )

print(l_numbers)
